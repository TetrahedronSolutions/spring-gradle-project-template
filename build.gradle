/**
 * Buildscript will install the spring-boot dependicies before anything else.
 *
 * */
buildscript {
    ext {
        springframeworkVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springframeworkVersion"
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'spring-boot'
apply from: 'provided.gradle'

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    jarFileName = 'tsol-server-gradle'
    jarFileVersion = '0.1.0'

    mainClassProject = 'net.tsol.App'
    projectApp = 'net.tsol'

    droolsVersion = '6.1.0.Final'
    gradleVersion = '2.4'
    junitVersion = '4.+'
    lombokVersion = '1.16.6'

    workPath = "src\\main\\net\\tsol"
    testPath = 'src/test/'
}

repositories {
    mavenCentral()
}

repositories {
    maven {
        name 'central'
        url 'http://repo1.maven.org/maven2'
    }
    maven {
        name 'jboss'
        url 'http://repository.jboss.org/nexus/content/groups/public-jboss'
    }
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

dependencies {
    provided "org.projectlombok:lombok:$lombokVersion"
    
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework:spring-jdbc"
    compile "org.kie:kie-ci:$droolsVersion"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "junit:junit:$junitVersion"
}

sourceSets {
    main.java.srcDir "src/main"  // tell the user what is the main run folder
    test.java.srcDir "src/test"  // tell the user what is the main run folder
}

jar {
    baseName = "$jarFileName"
    version = "$jarFileVersion"
}

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}
